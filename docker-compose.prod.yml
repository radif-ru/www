version: "3.7"

services:
  nginx:
# Постоянная перезагрузка контейнера. Даже в случае остановки или рестарта ОС
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
# Для экономии места напрямую монтирую файлы с хоста, без копирования.
# Так же это позволяет редактировать файлы и они моментально отобразятся на ВМ.
# Существует риск, что докер затрёт данные хоста. Но здесь не принципиально.
      - ./index.html:/var/www/index.html
      - ./images:/var/www/images
      - ./audio:/var/www/audio
      - ./html-css_interactive:/var/www/html-css_interactive
      - ./HTML-CSS-Base:/var/www/HTML-CSS-Base
      - ./HTML-CSS-Prof:/var/www/HTML-CSS-Prof
      - ./JavaScriptProfessional:/var/www/JavaScriptProfessional
      - ./JavaScriptProfessional-v2:/var/www/JavaScriptProfessional-v2
      - ./Intex_Stroy:/var/www/Intex_Stroy
      - /etc/letsencrypt:/etc/letsencrypt
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./Intergalactic_Entertainment/intergalactic/staticfiles:/var/www/intergalactic/staticfiles
      - ./Intergalactic_Entertainment/intergalactic/media:/var/www/intergalactic/media
      - ./Django_optimization_tools/staticfiles:/var/www/geekshop/staticfiles
      - ./Django_optimization_tools/media:/var/www/geekshop/media
      - ./Full_Stack_Django_REST_React/frontend/build:/var/www/frontend
      - static_volume:/home/app/backend/staticfiles
      - media_volume:/home/app/backend/mediafiles
    networks:
      - my_network
  intergalactic:
    restart: always
    build:
      context: Intergalactic_Entertainment/intergalactic
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - ./Intergalactic_Entertainment/intergalactic/db.sqlite3:/var/www/intergalactic/db.sqlite3
      - ./Intergalactic_Entertainment/intergalactic/staticfiles:/var/www/intergalactic/staticfiles
      - ./Intergalactic_Entertainment/intergalactic/media:/var/www/intergalactic/media
    networks:
      - my_network
  geekshop:
    restart: always
    build:
      context: Django_optimization_tools
      dockerfile: Dockerfile
    expose:
      - 9999
    volumes:
      - ./Django_optimization_tools/staticfiles:/var/www/geekshop/staticfiles
      - ./Django_optimization_tools/media:/var/www/geekshop/media
    networks:
      - my_network

volumes:
  static_volume:
# Объявляю том внешним, подключаю из запущенного контейнера в другом каталоге
    external: true
  media_volume:
    external: true

networks:
  my_network:
# Драйвер сети
    driver: bridge
# Имя сети
    name: my_network
# Подключение к внешней сети. Если её нет - необходимо создать!
    external: true